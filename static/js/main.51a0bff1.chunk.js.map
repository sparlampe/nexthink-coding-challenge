{"version":3,"sources":["pokemon-streams.ts","App.tsx","index.tsx"],"names":["delayMs","numberToTake","pokemonFetcher","maxNumOfCaughtPokemons","pokemonObservable","pokemonIdsBeingCaught","BehaviorSubject","pokemonIdsBeingReleased","caughtPokemonIds","merge","pipe","map","id","type","scan","acc","value","length","filter","i","freePokemons","combineLatest","ids","p","includes","caughtPokemons","createCatchPokemonStreams","fromFetch","selector","res","json","interval","v","take","mergeMap","name","sprite","sprites","front_default","types","one","publishReplay","refCount","App","useEventCallback","event$","e","parseInt","currentTarget","subscribe","catchCallback","freePokemon","releaseCallback","caughtPokemon","className","pokemon","toString","key","onClick","rowSpan","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAakCA,EACAC,EACAC,E,mKAsBO,SAACC,EAAgCC,GACtE,IAAMC,EAAwB,IAAIC,IAAgB,GAC5CC,EAA0B,IAAID,IAAgB,GAC9CE,EAAmBC,YACrBJ,EAAsBK,KAAKC,aAA6B,SAAAC,GAAE,MAAK,CAACA,KAAIC,KAAM,WAC1EN,EAAwBG,KAAKC,aAAgC,SAAAC,GAAE,MAAK,CAACA,KAAIC,KAAM,YACjFH,KACMI,aAAK,SAACC,EAAKC,GACH,MAAgB,QAAbA,EAAMH,KACEE,EAAIE,SAAWd,EAAwBY,EAAvC,sBAAgDA,GAAhD,CAAqDC,EAAMJ,KAE3DG,EAAIG,QAAO,SAAAC,GAAC,OAAGA,IAAIH,EAAMJ,QAGtC,KAcd,MAAO,CACHP,wBACAE,0BACAa,aAbiBC,YAAc,CAACb,EAAkBJ,IACjDM,KACGC,aAAI,mCAAEW,EAAF,iBAA8BJ,QAAO,SAAAK,GAAC,OAAKD,EAAIE,SAASD,EAAEX,WAYlEa,eATmBJ,YAAc,CAACb,EAAkBJ,IACnDM,KACGC,aAAI,mCAAEW,EAAF,iBAA8BJ,QAAO,SAAAK,GAAC,OAAID,EAAIE,SAASD,EAAEX,YCtDcc,CAA0B,GDK/E1B,ECNI,IDOJC,ECPQ,IDQRC,EA0DJ,SAACU,GAAD,OAAgBe,YAAS,4CAAgDf,GAAM,CAACgB,SAAU,SAAAC,GAAG,OAAIA,EAAIC,WAxD/HC,YAAS/B,GACRU,KACGC,aAAI,SAAAqB,GAAC,OAAIA,EAAE,KACXC,YAAKhC,GACLiC,YAAShC,GACTS,aAA2B,SAAAY,GAAC,MAAK,CAC7BX,GAAIW,EAAEX,GACNuB,KAAMZ,EAAEY,KACRC,OAAQb,EAAEc,QAAQC,cAClBzB,KAAMU,EAAEgB,MAAM,GAAG1B,KAAKsB,SAE1BrB,aAAiC,SAACC,EAAKyB,GAAN,4BAAmBzB,GAAnB,CAAwByB,MAAO,IAChEC,cACAC,iBCtBDrC,E,EAAAA,sBAAuBE,E,EAAAA,wBAAyBa,E,EAAAA,aAAcK,E,EAAAA,eAkDtDkB,MAhDf,WAAgB,IAAD,EAC0BC,aAAiB,SAACC,GAE/C,OADAA,EAAOnC,KAAKC,aAAI,SAAAmC,GAAC,OAAIC,SAASD,EAAEE,cAAcpC,QAAMqC,UAAU5C,GACvDe,IACR,IAJI,mBACJ8B,EADI,KACWC,EADX,OAM8BP,aAAiB,SAACC,GAEnD,OADAA,EAAOnC,KAAKC,aAAI,SAAAmC,GAAC,OAAIC,SAASD,EAAEE,cAAcpC,QAAMqC,UAAU1C,GACvDkB,IACR,IATI,mBAMJ2B,EANI,KAMaC,EANb,KAWX,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,2BACVD,EAAc1C,KAAI,SAAA4C,GAAO,OACtB,yBAAKD,UAAU,gBAAgB1C,GAAI2C,EAAQ3C,GAAG4C,WAAYC,IAAKF,EAAQpB,KAAMuB,QAASN,GAClF,+BAAO,+BACH,4BACI,wBAAIO,QAAS,GAAG,yBAAKC,IAAKL,EAAQnB,UAClC,mCACA,4BAAKmB,EAAQ3C,KAEjB,4BACI,qCACA,4BAAK2C,EAAQpB,OAEjB,4BACI,qCACA,4BAAKoB,EAAQ1C,cAMjC,yBAAKyC,UAAU,yBACX,yBAAKA,UAAU,gBACdH,EAAYxC,KAAI,SAAA4C,GAAO,OACpB,yBAAKD,UAAU,cAAc1C,GAAI2C,EAAQ3C,GAAG4C,WAAYC,IAAKF,EAAQpB,KAAMuB,QAASR,GAChF,yBAAKU,IAAKL,EAAQnB,iBC3C1CyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.51a0bff1.chunk.js","sourcesContent":["import {BehaviorSubject, combineLatest, interval, merge, Observable} from \"rxjs\";\nimport {map, mergeMap, scan, take, publishReplay, refCount} from \"rxjs/operators\";\n\nimport {IPokemon} from \"pokeapi-typescript\";\nimport {fromFetch} from \"rxjs/fetch\";\n\nexport interface PokemonInfo {\n    id: number,\n    name: string,\n    sprite: string,\n    type: string\n}\n\nexport const pokemonObservable = (delayMs: number, \n                                  numberToTake: number, \n                                  pokemonFetcher: (id: number) => Observable<IPokemon>\n): Observable<PokemonInfo[]> =>  \n    interval(delayMs)\n    .pipe(\n        map(v => v+1),\n        take(numberToTake),\n        mergeMap(pokemonFetcher),\n        map<IPokemon, PokemonInfo>(p => ({\n            id: p.id,\n            name: p.name,\n            sprite: p.sprites.front_default,\n            type: p.types[0].type.name\n        })),\n        scan<PokemonInfo, PokemonInfo[]>((acc, one) => ([...acc, one]), []),\n        publishReplay(),\n        refCount()\n    )\n\ninterface PokemonAction {id: number;}\ntype RemovePokemonAction = PokemonAction & {type: \"rem\"}\ntype AddPokemonAction = PokemonAction & {type: \"add\"}\n\nexport const createCatchPokemonStreams = (maxNumOfCaughtPokemons: number, pokemonObservable: Observable<PokemonInfo[]>) => {\n    const pokemonIdsBeingCaught = new BehaviorSubject(0);\n    const pokemonIdsBeingReleased = new BehaviorSubject(0);\n    const caughtPokemonIds = merge(\n        pokemonIdsBeingCaught.pipe(map<number,AddPokemonAction>(id => ({id, type: \"add\"}))),\n        pokemonIdsBeingReleased.pipe(map<number,RemovePokemonAction>(id => ({id, type: \"rem\"})))\n    ).pipe(\n            scan((acc, value) => {\n                    if(value.type===\"add\"){\n                        return acc.length === maxNumOfCaughtPokemons? acc: [...acc, value.id]\n                    } else {\n                        return acc.filter(i=> i!==value.id)\n                    }\n                }\n                , [] as Array<number>)\n        )\n    \n    \n    const freePokemons = combineLatest([caughtPokemonIds, pokemonObservable])\n        .pipe(\n            map(([ids, pokemons]) => pokemons.filter(p => !ids.includes(p.id)))\n        )\n\n    const caughtPokemons = combineLatest([caughtPokemonIds, pokemonObservable])\n        .pipe(\n            map(([ids, pokemons]) => pokemons.filter(p => ids.includes(p.id)))\n        )\n    \n    return {\n        pokemonIdsBeingCaught,\n        pokemonIdsBeingReleased,\n        freePokemons,\n        caughtPokemons\n    }\n}\n\nexport const pokemonFetcher = (id: number) => fromFetch<IPokemon>(`https://pokeapi.co/api/v2/pokemon/${id}`, {selector: res => res.json()})","import React from 'react';\nimport './App.css';\nimport {useEventCallback} from \"rxjs-hooks\";\nimport {Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {createCatchPokemonStreams, pokemonFetcher, PokemonInfo, pokemonObservable} from \"./pokemon-streams\";\n\nconst allPokemons = pokemonObservable(500,151, pokemonFetcher)\nconst {pokemonIdsBeingCaught, pokemonIdsBeingReleased, freePokemons, caughtPokemons} = createCatchPokemonStreams(6,allPokemons)\n\nfunction App() {\n    const [catchCallback, freePokemon] = useEventCallback((event$:Observable<React.MouseEvent<HTMLElement>>) => {\n            event$.pipe(map(e => parseInt(e.currentTarget.id))).subscribe(pokemonIdsBeingCaught)\n            return freePokemons\n        }, [] as PokemonInfo[])\n    \n    const [releaseCallback, caughtPokemon] = useEventCallback((event$:Observable<React.MouseEvent<HTMLElement>>) => {\n            event$.pipe(map(e => parseInt(e.currentTarget.id))).subscribe(pokemonIdsBeingReleased)\n            return caughtPokemons\n        }, [] as PokemonInfo[])\n\n    return (\n        <div className=\"App\">\n            <div className=\"CaughtPokemonsContainer\">\n                {caughtPokemon.map(pokemon => (\n                    <div className=\"CaughtPokemon\" id={pokemon.id.toString()} key={pokemon.name} onClick={releaseCallback}>\n                        <table><tbody>\n                            <tr>\n                                <td rowSpan={3}><img src={pokemon.sprite}></img></td>\n                                <td>ID:</td>\n                                <td>{pokemon.id}</td>\n                            </tr>\n                            <tr>\n                                <td>Name:</td>\n                                <td>{pokemon.name}</td>\n                            </tr>\n                            <tr>\n                                <td>Type:</td>\n                                <td>{pokemon.type}</td>\n                            </tr>\n                        </tbody></table>\n                    </div>\n                ))}\n            </div>\n            <div className=\"FreePokemonsContainer\">\n                <div className=\"FreePokemons\">\n                {freePokemon.map(pokemon => (\n                    <div className=\"FreePokemon\" id={pokemon.id.toString()} key={pokemon.name} onClick={catchCallback}>\n                        <img src={pokemon.sprite}></img>\n                    </div>\n                    \n                ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}